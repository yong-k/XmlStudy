※ 참고
   1) SGML(Standard Generalized Markup Language)
      SGML 은 기술적 문서 마크업을 생성하는 기법을 제공하는 표준 일반화
      마크업 언어로 디지털 문서를 플랫폼에 상관없이 사용하기 위한 목적으로
      만들어졌으며, 1986년에 ISO-8897 표준으로 제정되었고 문서의 논리적
      구조와 내용을 기술하기 위한 마크업이다.

      장점 : 시스템과 플랫폼에 독립적 / 재사용성 / 공개 표준
      단점 : - 작성 규칙의 복잡성으로 인해 전문가들만을 위한 언어.
             - 관련 업계의 범용적인 지원 미비.

      → 이와 같은 단점을 어느정도 해결하고자 만들어진 마크업 언어가
         바로 HTML 이다.

   2) HTML(Hyper Text Markup Language)
      HTML 은 웹에서 정보를 표현할 목적으로 제안한 마크업 언어로
      SGML 태그 중 일부를 미리 정의해서 사용하기 쉽게 만든 것이 HTML 이다.
      이러한 HTML 은 인터넷의 빠른 보급과 확장으로 급성장하였고
      현재 가장 많이 사용하는 마크업 언어이다.

      장점 : 웹 정보를 표현하는데 있어서 매우 범용적이다.
      단점 : - 사용할 수 있는 태그가 제한적이다.
             - 문서의 내용과 이를 화면에 표현하기 위한 정보만 존재한다.
               따라서 태그 내의 내용이 어떤 의미의 데이터를 포함하는지
               알 수 없다.
             - 문서에 포함된 정보 간에 연관성을 표현할 수 없고,
               관련 있는 정보를 검색하기 어렵다.
             - 문서의 유효성을 검증하기 어렵다.
             - 전체 문서만 표현할 수 있다.

   3) XML(Extensible Markup Language)
      XML 은 SGML 과 HTML 의 문제점을 해결할 목적으로 개발된 언어로
      SGML 로 부터 정보의 구조적 기술과 정보 내용과 표시 정보를 분리한 구조를
      이어받고, HTML 로 부터 인터넷의 이용 환경을 이어받았다.
      즉, XML 은 웹에서 구조화된 문서를 표현하고 전송할 수 있도록 설계된
      마크업 언어로 기존 HTML 의 한계와 SGML 의 복잡함을 해결하기 위한 방안으로
      제시된 마크업 언어로 다양한 표현이 가능하고 확장성이 뛰어나며 간단하다.
      또한, 플랫폼 독립적이며, 웹은 물론 어플리케이션에서도 사용이 가능하다.

      HTML 은 정해진 태그만을 사용하고 태그의 숫자도 제한을 두어서
      사용이 편리하지만 태그가 미리 정해져 있다는 단점이 있다.
      즉, 시시각각으로 변하는 인터넷 사용자들의 요구에 맞추기 위해서는
      태그도 그에 따라서 새로운 태그가 필요할 때가 있기 마련인데
      새로운 태그를 만들 수 없는 것이다.
 
      그래서 정해진 태그가 아니라 필요할 때 마다 태그를 만들어서 사용할
      수 있는 요구가 일어나기 시작했다.
      그것이 바로 XML 이다.
      결국 XML 은 SGML(표준화된 일반 마크업 언어)이 가지고 있는 장점인
      문서의 구조와 속성을 그대로 가지고 있으며,
      HTML 의 단점인 정해진 태그 밖에 사용할 수 없다는 것을
      보완해서 나오기 시작한 것이다.